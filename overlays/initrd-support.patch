diff --git a/arch/loongarch/lib/bootm.c b/arch/loongarch/lib/bootm.c
index 08c92e15..090056c9 100644
--- a/arch/loongarch/lib/bootm.c
+++ b/arch/loongarch/lib/bootm.c
@@ -84,7 +84,7 @@ static void linux_cmdline_dump(void)
 	      linux_argv, linux_argp);
 
 	for (i = 1; i < linux_argc; i++)
-		debug("   arg %03d: %s\n", i, linux_argv[i]);
+		printf("   arg %03d: %s\n", i, linux_argv[i]);
 }
 
 static void linux_cmdline_legacy(bootm_headers_t *images)
@@ -127,27 +127,42 @@ static void linux_cmdline_legacy(bootm_headers_t *images)
 	}
 }
 
-// static void linux_cmdline_append(bootm_headers_t *images)
-// {
-// 	char buf[24];
-// 	ulong mem, rd_start, rd_size;
-
-// 	/* append mem */
-// 	mem = gd->ram_size >> 20;
-// 	sprintf(buf, "mem=%luM", mem);
-// 	linux_cmdline_set(buf, strlen(buf));
+static void linux_cmdline_append(bootm_headers_t *images)
+{
+	char buf[32];
+	ulong mem, rd_start, rd_size;
 
-// 	/* append rd_start and rd_size */
-// 	rd_start = images->initrd_start;
-// 	rd_size = images->initrd_end - images->initrd_start;
+	// /* append mem */
+	// mem = gd->ram_size >> 20;
+	// sprintf(buf, "mem=%luM", mem);
+	// linux_cmdline_set(buf, strlen(buf));
 
-// 	if (rd_size) {
-// 		sprintf(buf, "rd_start=0x%08lX", rd_start);
-// 		linux_cmdline_set(buf, strlen(buf));
-// 		sprintf(buf, "rd_size=0x%lX", rd_size);
-// 		linux_cmdline_set(buf, strlen(buf));
-// 	}
-// }
+	/* append rd_start and rd_size */
+	rd_start = images->initrd_start;
+	rd_size = images->initrd_end - images->initrd_start;
+	ulong rd_start2, rd_size2;
+	rd_start2 = images->rd_start;
+	rd_size2 = images->rd_end - images->rd_start;
+
+	if (rd_start) {
+		sprintf(buf, "rd_start=0x%08lX", rd_start);
+		linux_cmdline_set(buf, strlen(buf));
+		sprintf(buf, "rd_size=0x%lX", rd_size);
+		linux_cmdline_set(buf, strlen(buf));
+	} else if (rd_start2) {
+		printf("actual name is rd_xxx\n");
+		sprintf(buf, "rd_start=0x%08lX", rd_start2);
+		linux_cmdline_set(buf, strlen(buf));
+		sprintf(buf, "rd_size=0x%lX", rd_size2);
+		linux_cmdline_set(buf, strlen(buf));
+		printf("rd_start2=0x%08lX \n", rd_start2);
+		printf("rd_size2=0x%lX \n", rd_size2);
+		// snprintf(buf, sizeof(buf), "initrd=0x%08lX,0x%lX", rd_start2, rd_size2);
+		// linux_cmdline_set(buf, strlen(buf));
+	} else {
+		printf("no initrd");
+	}
+}
 
 static void linux_env_init(void)
 {
@@ -198,10 +213,10 @@ static void linux_env_legacy(bootm_headers_t *images)
 	linux_env_set("memsize", env_buf);
 
 	sprintf(env_buf, "0x%08lX", rd_start);
-	linux_env_set("initrd_start", env_buf);
+	linux_env_set("rd_start", env_buf);
 
 	sprintf(env_buf, "0x%lX", rd_size);
-	linux_env_set("initrd_size", env_buf);
+	linux_env_set("rd_size", env_buf);
 
 	sprintf(env_buf, "0x%08X", (uint) (gd->bd->bi_flashstart));
 	linux_env_set("flash_start", env_buf);
@@ -254,7 +269,7 @@ static void boot_prep_linux(bootm_headers_t *images)
 	} else {
 #ifdef CONFIG_LOONGARCH_BOOT_CMDLINE_LEGACY
 			linux_cmdline_legacy(images);
-			// linux_cmdline_append(images);
+			linux_cmdline_append(images);
 			linux_cmdline_dump();
 			linux_env_legacy(images);
 #endif
diff --git a/include/configs/loongson_common.h b/include/configs/loongson_common.h
index 63064b32..8d7fcdfe 100644
--- a/include/configs/loongson_common.h
+++ b/include/configs/loongson_common.h
@@ -147,17 +147,23 @@ boot"
 saveenv;\
 boot"
 
+
+#define BOOT_TARGET_DEVICES(func) \
+func(MMC, mmc, 0) \
+func(USB, usb, 0)
+
+#include <config_distro_bootcmd.h>
+
 /* use ab system mode */
 #define LS_DOUBLE_SYSTEM
 
+#define SCRIPT_ADDR 9000000002000000
+#define OVERLAY_ADDR_R 9000000006000000
+
 #define	CONFIG_EXTRA_ENV_SETTINGS					\
 	CONSOLE_STDOUT_SETTINGS \
-	LOONGSON_BOOTMENU \
-	LOONGSON_BOOTMENU_VIDEO \
-	LOONGSON_BOOTMENU_DELAY \
 	"nand_pagesize=2048\0" \
 	"loadaddr=" __stringify(CONFIG_SYS_LOAD_ADDR) "\0" 		\
-	"fdt_addr=" __stringify(FDT_ADDR) "\0" 					\
 	"fdt_size=" __stringify(FDT_SIZE) "\0" 					\
 	"rd_start=" __stringify(RD_ADDR) "\0" 					\
 	"rd_size=" __stringify(RD_SIZE) "\0" 					\
@@ -168,7 +174,14 @@ boot"
 	"rotate=0\0" \
 	"syspart=1\0" \
 	"syspart_last=4\0" \
-	"syspart_ch=0\0"
+	"syspart_ch=0\0" \
+	"fdt_addr_r=" __stringify(FDT_ADDR) "\0" \
+	"fdtoverlay_addr_r=" __stringify(OVERLAY_ADDR_R) "\0" \
+	"fdtfile=" CONFIG_DEFAULT_DEVICE_TREE ".dtb\0" \
+	"ramdisk_addr_r=" __stringify(RD_ADDR) "\0" \
+	"kernel_addr_r=" __stringify(CONFIG_SYS_LOAD_ADDR) "\0" \
+	"pxefile_addr_r=" __stringify(PXE_ADDR) "\0" \
+	"scriptaddr=" __stringify(SCRIPT_ADDR) "\0"
 
 #define CONFIG_IPADDR		192.168.1.20
 #define CONFIG_NETMASK		255.255.255.0
